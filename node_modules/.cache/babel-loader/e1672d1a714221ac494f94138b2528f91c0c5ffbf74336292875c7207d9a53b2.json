{"ast":null,"code":"// import React from 'react';\n// import { useState, useEffect } from 'react';\n// const themes = {\n//     dark: {\n//         backgroundColor: '#000000',\n//         color: '#5a855a',\n//     },\n//     light: {\n//         backgroundColor: 'white',\n//         color: '#5a855a',\n//     },\n\n// }\n// const initialState = {\n//     dark: false,\n//     theme: themes.light,\n//     toggle: () => { }\n// }\n// const ThemeContext = React.createContext(initialState)\n// function ThemeProvider({ children }) {\n//     const [dark, setDark] = useState(false) // Default theme is light\n//     // On mount, read the preferred theme from thr persistence\n//     useEffect(() => {\n//         const isDark = localStorage.getItem('dark') === 'true'\n//         setDark(isDark)\n//     }, [dark])\n//     // To toggle between dark and light modes\n//     const toggle = () => {\n//         const isDark = !dark\n//         localStorage.setItem('dark', JSON.stringify(isDark))\n//         setDark(isDark)\n//     }\n//     const theme = dark ? themes.dark : themes.light\n//     return (\n//         <ThemeContext.Provider value={{ theme, dark, toggle }}>\n//             {children}\n//         </ThemeContext.Provider>\n//     )\n// }\n// export { ThemeProvider, ThemeContext }","map":{"version":3,"names":[],"sources":["D:/FER201m/Lab_Fer/Lab_ReactJS_FER/src/components/ThemeContext.js"],"sourcesContent":["// import React from 'react';\r\n// import { useState, useEffect } from 'react';\r\n// const themes = {\r\n//     dark: {\r\n//         backgroundColor: '#000000',\r\n//         color: '#5a855a',\r\n//     },\r\n//     light: {\r\n//         backgroundColor: 'white',\r\n//         color: '#5a855a',\r\n//     },\r\n\r\n\r\n// }\r\n// const initialState = {\r\n//     dark: false,\r\n//     theme: themes.light,\r\n//     toggle: () => { }\r\n// }\r\n// const ThemeContext = React.createContext(initialState)\r\n// function ThemeProvider({ children }) {\r\n//     const [dark, setDark] = useState(false) // Default theme is light\r\n//     // On mount, read the preferred theme from thr persistence\r\n//     useEffect(() => {\r\n//         const isDark = localStorage.getItem('dark') === 'true'\r\n//         setDark(isDark)\r\n//     }, [dark])\r\n//     // To toggle between dark and light modes\r\n//     const toggle = () => {\r\n//         const isDark = !dark\r\n//         localStorage.setItem('dark', JSON.stringify(isDark))\r\n//         setDark(isDark)\r\n//     }\r\n//     const theme = dark ? themes.dark : themes.light\r\n//     return (\r\n//         <ThemeContext.Provider value={{ theme, dark, toggle }}>\r\n//             {children}\r\n//         </ThemeContext.Provider>\r\n//     )\r\n// }\r\n// export { ThemeProvider, ThemeContext }\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}